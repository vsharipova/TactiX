version: '3.8'

services:
  web:
    build:
      context: ..  
      dockerfile: TactiX/Dockerfile 
    ports:
      - "5000:80"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ../.env  
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__TactiXDB=Host=db;Port=5432;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
  
  db:
    image: postgres:latest
    env_file:
      - ../.env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: